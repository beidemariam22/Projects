function [cameraParams, estimationErrors] = calibrate_camera()
% Auto-generated by cameraCalibrator app on 07-Nov-2020
% Square size of 40 mm
%-------------------------------------------------------

% Define images to process
imageFileNames = {'.\calib\0L.png',...
    '.\calib\1L.png',...
    '.\calib\2L.png',...
    '.\calib\3L.png',...
    '.\calib\4L.png',...
    '.\calib\5L.png',...
    '.\calib\6L.png',...
    '.\calib\7L.png',...
    '.\calib\8L.png',...
    '.\calib\9L.png',...
    '.\calib\10L.png',...
    '.\calib\11L.png',...
    '.\calib\12L.png',...
    '.\calib\13L.png',...
    '.\calib\14L.png',...
    '.\calib\15L.png',...
    '.\calib\16L.png',...
    '.\calib\17L.png',...
    '.\calib\18L.png',...
    '.\calib\19L.png',...
    '.\calib\20L.png',...
    '.\calib\21L.png',...
    '.\calib\22L.png',...
    '.\calib\23L.png',...
    '.\calib\24L.png',...
    '.\calib\25L.png',...
    '.\calib\26L.png',...
    '.\calib\27L.png',...
    '.\calib\28L.png',...
    '.\calib\29L.png',...
    '.\calib\30L.png',...
    '.\calib\31L.png',...
    '.\calib\32L.png',...
    '.\calib\33L.png',...
    '.\calib\34L.png',...
    '.\calib\35L.png',...
    '.\calib\36L.png',...
    '.\calib\37L.png',...
    '.\calib\38L.png',...
    '.\calib\39L.png',...
    '.\calib\40L.png',...
    '.\calib\41L.png',...
    '.\calib\42L.png',...
    '.\calib\43L.png',...
    '.\calib\44L.png',...
    '.\calib\45L.png',...
    '.\calib\47L.png',...
    '.\calib\48L.png',...
    '.\calib\49L.png',...
    '.\calib\50L.png',...
    '.\calib\51L.png',...
    '.\calib\52L.png',...
    '.\calib\53L.png',...
    '.\calib\54L.png',...
    '.\calib\57L.png',...
    '.\calib\58L.png',...
    '.\calib\59L.png',...
    '.\calib\60L.png',...
    '.\calib\61L.png',...
    '.\calib\62L.png',...
    '.\calib\63L.png',...
    '.\calib\64L.png',...
    '.\calib\65L.png',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 40;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, ~, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
% h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
% h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
% displayErrors(estimationErrors, cameraParams);
